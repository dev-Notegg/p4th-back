<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.p4th.backend.mapper.AuthMapper">

    <!-- 회원가입 -->
    <insert id="insertUser">
        INSERT INTO user_info
        (
            user_id,
            password,
            nickname,
            pass_code,
            created_by
        )
        VALUES
            (
                #{userId},
                #{password},
                #{nickname},
                #{passCode},
                #{userId}
            )
    </insert>

    <select id="selectByUserId" resultType="com.p4th.backend.domain.User">
        SELECT
            user_id AS userId,
            password,
            password_changed_at AS passwordChangedAt,
            pass_code AS passCode,
            nickname,
            nickname_changed_at AS nicknameChangedAt,
            membership_level AS membershipLevel,
            admin_role AS adminRole,
            warning_count AS warningCount,
            account_status AS accountStatus,
            account_status_changed_at AS accountStatusChangedAt,
            last_login_ip AS lastLoginIp,
            refresh_token AS refreshToken,
            created_by AS createdBy,
            created_at AS createdAt,
            updated_by AS updatedBy,
            updated_at AS updatedAt
        FROM user_info
        WHERE user_id = #{userId}
    </select>

    <!-- passCode로 회원 조회 (아이디 찾기) -->
    <select id="selectByPassCode" resultType="com.p4th.backend.domain.User">
        SELECT
            user_id AS userId
        FROM user_info
        WHERE pass_code = #{passCode}
    </select>

    <!-- 토큰 업데이트 -->
    <update id="updateTokens">
        UPDATE user_info
        SET
            refresh_token = #{refreshToken},
            updated_by = 'SYSTEM'
        WHERE user_id = #{userId}
    </update>

    <!-- 마지막 로그인 ip/시간 업데이트 -->
    <update id="updateLastLoginInfo">
        UPDATE user_info
        SET
            last_login_ip = #{lastLoginIp},
            last_login_at = NOW(),
            updated_by = 'SYSTEM'
        WHERE user_id = #{userId}
    </update>

    <!-- 비밀번호 업데이트 (비밀번호 찾기 시 임시 비밀번호 저장) -->
    <update id="updatePassword">
        UPDATE user_info
        SET
            password = #{password},
            password_changed_at = NOW(),
            updated_by = #{userId}
        WHERE user_id = #{userId}
    </update>

    <select id="selectByNickname" resultType="com.p4th.backend.domain.User">
        SELECT
            user_id AS userId,
            password,
            password_changed_at AS passwordChangedAt,
            pass_code AS passCode,
            nickname,
            nickname_changed_at AS nicknameChangedAt,
            membership_level AS membershipLevel,
            admin_role AS adminRole,
            warning_count AS warningCount,
            account_status AS accountStatus,
            account_status_changed_at AS accountStatusChangedAt,
            last_login_ip AS lastLoginIp,
            refresh_token AS refreshToken,
            created_by AS createdBy,
            created_at AS createdAt,
            updated_by AS updatedBy,
            updated_at AS updatedAt
        FROM user_info
        WHERE nickname = #{nickname}
    </select>

    <!-- 닉네임 변경 업데이트 -->
    <update id="updateUserNickname">
        UPDATE user_info
        SET
            nickname = #{nickname},
            nickname_changed_at = NOW(),
            updated_by = #{userId}
        WHERE user_id = #{userId}
    </update>

    <!-- 회원 탈퇴: 회원정보 삭제 -->
    <delete id="deleteUser">
        DELETE FROM user_info
        WHERE user_id = #{userId}
    </delete>

    <select id="selectAllUserIds" resultType="java.lang.String">
        SELECT user_id FROM user_info
    </select>
</mapper>
