<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.p4th.backend.mapper.PostMapper">

    <select id="getPostsByBoard" resultType="com.p4th.backend.domain.Post">
        SELECT post_id, board_id, user_id, title, content, view_count, comment_count, created_at
        FROM post
        WHERE board_id = #{boardId}
        ORDER BY created_at DESC
        LIMIT #{size} OFFSET #{offset}
    </select>

    <select id="countPostsByBoard" resultType="int">
        SELECT COUNT(*) FROM post
        WHERE board_id = #{boardId}
    </select>

    <select id="getPostDetail" resultType="com.p4th.backend.domain.Post">
        SELECT post_id, board_id, user_id, title, content, view_count, comment_count, created_at
        FROM post
        WHERE post_id = #{postId}
    </select>

    <insert id="insertPost">
        INSERT INTO post (post_id, board_id, user_id, title, content, created_by)
        VALUES (#{postId}, #{boardId}, #{userId}, #{title}, #{content}, #{userId})
    </insert>

    <update id="updatePost">
        UPDATE post
        SET board_id = #{boardId},
            title = #{title},
            content = #{content},
            updated_by = #{userId}
        WHERE post_id = #{postId}
    </update>

    <delete id="deletePost">
        DELETE FROM post
        WHERE post_id = #{postId}
    </delete>

    <!-- 인기 게시글 조회 -->
    <select id="getPopularPosts" resultType="com.p4th.backend.dto.PopularPostResponse">
        SELECT
            p.post_id AS postId,
            p.board_id AS boardId,
            p.user_id AS userId,
            p.title AS title,
            c.category_name AS category,
            b.board_name AS boardName,
            p.view_count AS viewCount,
            p.comment_count AS commentCount,
            (SELECT pa.file_url FROM post_attachment pa WHERE pa.post_id = p.post_id LIMIT 1) AS imageUrl,
            (SELECT COUNT(*) FROM post_attachment pa WHERE pa.post_id = p.post_id) AS imageCount,
            p.created_at AS createdAt
        FROM post p
                 LEFT JOIN board b ON p.board_id = b.board_id
                 LEFT JOIN category c ON b.category_id = c.category_id
        WHERE p.status = 'NORMAL'
        ORDER BY (p.view_count * 0.4 + p.comment_count * 0.2) DESC
        LIMIT 20
    </select>

    <select id="getAllPosts" resultType="com.p4th.backend.domain.Post">
        SELECT post_id, board_id, user_id, title, content, view_count, comment_count, created_at
        FROM post
        WHERE status = 'NORMAL'
    </select>
</mapper>
